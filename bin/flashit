#!/bin/bash

function error()
{
  echo "Error: $@" >&2
  exit -1
}

[ -z ${AOSP_HOME+x} ] && error "AOSP_HOME not set"
[ -z ${PROJ_DEVICE+x} ] && error "PROJ_DEVICE not set"
[ -z ${PROJ_PRODUCT+x} ] && error "PROJ_PRODUCT not set"

while getopts adp option
do
    case "$option"
        in
        a)
            ABL="--abl"
            ;;
        d)
            DISABLE="--disable-verity --disable-verification"
            ;;
        p)
            CMDLINE="--cmdline"
            ;;
        ?)
            error "Unknown option"
            ;;
    esac
done

shift $((OPTIND-1))

if [ 1 -eq $# ]
then
    FLASH_THIS="$1"
else
    # fast_flashfiles directory missing
    #FLASH_THIS="$AOSP_HOME/out/target/product/$PROJ_DEVICE/fast_flashfiles"
    FLASH_THIS="$AOSP_HOME/out/target/product/$PROJ_DEVICE/$PROJ_PRODUCT-flashfiles-eng.$USER.zip"
fi

function create_cmdline()
{
    if [ -n "$CMDLINE" ] && [ ! -f cmdline.img ]
    then
        echo "Creating permissive cmdline.img"
        dd if=/dev/zero of="cmdline.img" bs=1M count=1 iflag=fullblock
        echo -en "enforcing=0\nandroidboot.selinux=permissive\n" | dd of="cmdline.img" conv=nocreat,notrunc
    fi
}

function wait_for_fastboot()
{
    echo -n "Waiting for fastboot device..."
    while [ $(fastboot devices | wc -l) -eq 0 ]
    do
        echo -n .
        sleep 1
    done
    echo "Found"
}

function run_fastboot()
{
    echo "Flashing from: $FLASH_THIS"
    [ -f "fastboot.sh" ] || error "No fastboot.sh file found"
    chmod 750 fastboot.sh

    unset ANDROID_SERIAL
    set -x
    ./fastboot.sh $ABL $DISABLE $CMDLINE || error "fastboot.sh failed"
    set +x
}

function is_url()
{
    url_regex='(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]'
    [[ $1 =~ $url_regex ]]
}

function dl_file
{
    TMP_FILE="$(mktemp --suffix ".zip")" || error "Could not create temp directory"
    trap "rm -r $TMP_FILE" EXIT
    echo "Downloading to $TMP_FILE"
    curl -o "$TMP_FILE" "$1" || error "Could not download "$1" to $TMP_FILE"
    FLASH_THIS="$TMP_FILE"
}

function unpack_zip
{
    TMP_DIR="$(mktemp -d)" || error "Could not create temp directory"
    trap "rm -r $TMP_DIR $TMP_FILE" EXIT
    unzip -d "$TMP_DIR" "$FLASH_THIS" || error "Could not unzip $FLASH_THIS to $TMP_DIR"
    FLASH_THIS="$TMP_DIR"
}

is_url $FLASH_THIS && dl_file $FLASH_THIS

[ -f "$FLASH_THIS" ] && [ "zip" = ${FLASH_THIS##*.} ] && unpack_zip

[ -d "$FLASH_THIS" ] || error "Flashfiles directory missing: $FLASH_THIS"

pushd $FLASH_THIS > /dev/null

create_cmdline

if [ $PROJ_PRODUCT = ihu_kraken ]
then
    [ $(fastboot devices | wc -l) -ne 1 ] && vip pwr bm 2
elif [ $PROJ_PRODUCT = gtt_hydra ]
then
    [ $(fastboot devices | wc -l) -ne 1 ] && { mp su 0 usb_otg_switch.sh p; sleep 2; adb reboot bootloader; }
fi

wait_for_fastboot

run_fastboot

if [ $PROJ_PRODUCT = ihu_kraken ]
then
    vip pwr bm 1
fi

popd > /dev/null

