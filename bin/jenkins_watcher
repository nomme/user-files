#!/usr/bin/bash

function error()
{
  echo "Error: $@" >&2
  echo "$JOB_OUTPUT" >&2
  notify-send -t 0 --icon=/usr/share/icons/oxygen/base/32x32/status/security-low.png  "Could not monitor: $JOB_URL" "Error: $@"
  exit 1
}

[ $# -eq 1 ] || error "Usage: $(basename $0) <job url>"
[ -f ~/.cred/jenkins_credentials ] || error "Could not find ~/.cred/jenkins_credentials"

JOB_URL="$1"
QUERY="api/json?pretty=1&tree=building,result"
CRED="$(pass aptiv/jenkins)"

[[ $JOB_URL == */ ]] || JOB_URL="${JOB_URL}/"

URL="${JOB_URL}${QUERY}"

function update_status()
{
    #set -x
    JOB_OUTPUT=$(curl -fs -u $CRED $URL 2>&1) || error "Curl returned error"

    #echo "$JOB_OUTPUT"
    JOB_BUILDING=$(echo "$JOB_OUTPUT" | grep building | sed -r 's/.*building.\s+:\s+([a-zA-Z]+).*/\1/')
    JOB_RESULT=$(echo "$JOB_OUTPUT" | grep result | sed -r 's/.*result.\s+:\s+"?([a-zA-Z]+).*/\1/')
}

echo "Monitoring: $JOB_URL"
notify-send -t 10000 --icon=/usr/share/icons/oxygen/base/32x32/status/dialog-information.png "Monitoring: $JOB_URL"

while update_status && [ "$JOB_BUILDING" = "true" ]
do
    echo "Still building"
    sleep 60
done

if [ "$JOB_RESULT" = "SUCCESS" ]
then
    STATUS_ICON="/usr/share/icons/oxygen/base/32x32/status/security-high.png"
else
    STATUS_ICON="/usr/share/icons/oxygen/base/32x32/status/security-medium.png"
fi

notify-send -t 0 --icon=$STATUS_ICON  "Job completed: $JOB_URL" "Result: $JOB_RESULT"
echo "Result: $JOB_RESULT"
